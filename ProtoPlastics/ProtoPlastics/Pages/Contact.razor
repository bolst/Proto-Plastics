@page "/contact"
@inject NavigationManager navManager


<HeadContent>
    <meta name="description" content="Contact us at Proto-Plastics Canada.">
</HeadContent>

<Column ColumnSize="ColumnSize.Is10.OnTablet.Is11.OnMobile" Margin="Margin.IsAuto" Padding="Padding.Is4.FromEnd">
    <DisplayHeading Size="DisplayHeadingSize.Is4" Padding="Padding.Is4.FromTop">Contact Information
    </DisplayHeading>
</Column>

<br>
<br>
<br>

<Grid RowColumns="RowColumns.Are4.OnTablet.Are1.OnMobile">
    <Column ColumnSize="ColumnSize.Is1.OnTablet"></Column>
    <Column ColumnSize="ColumnSize.Is5.OnTablet.Is12.OnMobile" Margin="Margin.IsAuto.OnTablet.Is4.OnX.OnMobile"
        Padding="Padding.Is4.FromBottom.OnMobile" TextAlignment="TextAlignment.Center">
        @ContactItemRF(IconName.MapMarkerAlt, "1880 Blackacre Dr, Oldcastle, ON N0R 1L0", mapsLink)
    </Column>
    <Column ColumnSize="ColumnSize.Is5.OnTablet.Is12.OnMobile" Margin="Margin.IsAuto.OnTablet.Is4.OnX.OnMobile"
        Padding="Padding.Is4.FromBottom.OnMobile" TextAlignment="TextAlignment.Center">
        @ContactItemRF(IconName.Phone, "(519) 737-7838", "tel:{(519) 737-7838}")
    </Column>
    @* <Column ColumnSize="ColumnSize.Is3.OnTablet.Is12.OnMobile" Margin="Margin.IsAuto.OnTablet.Is4.OnX.OnMobile"
    Padding="Padding.Is4.FromBottom.OnMobile" TextAlignment="TextAlignment.Center">
    @ContactItemRF(IconName.Mail, "protop@mnsi.net", "mailto:protop@mnsi.net")
    </Column> *@
    <Column ColumnSize="ColumnSize.Is1.OnTablet"></Column>
</Grid>

@* <ProtoMap /> *@

<br>
<br>
<br>

<Divider />

<Column ColumnSize="ColumnSize.Is10.OnTablet.Is11.OnMobile" Margin="Margin.IsAuto" Padding="Padding.Is4.FromEnd">
    <Row><br></Row>

    @if (EmailIsSent)
    {
        <Row>
            <Lead>Thank you! Your message has been sent and we will respond as soon as possible.
                <Icon Name="IconName.Smile" />
            </Lead>
        </Row>
    }
    else
    {
        <Row>
            <DisplayHeading Size="DisplayHeadingSize.Is4">Send an Inquiry</DisplayHeading>
        </Row>
        <Row>
            <Lead>Reach out to us and we will be sure to get back to you shortly.</Lead>
        </Row>
        <Row>
            <Form>
                <Validations @ref="validations" Mode="ValidationMode.Manual">
                    <Field>
                        <FieldBody>
                            <Validation Validator="ValidationRule.IsNotEmpty">
                                <TextEdit Placeholder="Name" @bind-Text="@inputName" />
                            </Validation>
                        </FieldBody>
                    </Field>
                    <Field>
                        <FieldBody>
                            <Validation Validator="ValidationRule.IsEmail">
                                <TextEdit Placeholder="Email" @bind-Text="@inputEmail" />
                            </Validation>
                        </FieldBody>
                    </Field>
                    <Field>
                        <FieldBody>
                            <Validation Validator="@ValidationRule.IsNotEmpty">
                                <TextEdit Placeholder="Subject" @bind-Text="@inputSubject" />
                            </Validation>
                        </FieldBody>
                    </Field>
                    <Field>
                        <FieldBody>
                            <Validation Validator="ValidationRule.IsNotEmpty">
                                <MemoEdit Placeholder="Message" Rows="5" ReplaceTab TabSize="4"
                                    @bind-Text="@inputMessage" />
                            </Validation>
                        </FieldBody>
                    </Field>
                    <Field>
                        <Button Color="Color.Primary" Clicked="@OnClickedSubmit">Submit</Button>
                    </Field>
                </Validations>
            </Form>
        </Row>
    }
    <Row><br></Row>
</Column>


@code {

    bool EmailIsSent = false;

    RenderFragment ContactItemRF(IconName iconName, string body, string to) => __builder =>
    {
        <Blazorise.Link To="@to" Target="Target.Blank" Unstyled>
            <Icon Name="@iconName" IconSize="IconSize.x3" />
            <Lead TextOverflow="TextOverflow.Wrap" Padding="Padding.Is4.FromTop">@body</Lead>
        </Blazorise.Link>
    };

    string mapsLink =
    "https://www.google.com/maps/place/Proto+Plastics+Canada+Ltd/@42.2350196,-82.9764213,16z/data=!3m1!4b1!4m6!3m5!1s0x883b290e2ed510b3:0x585ddd600b120f6f!8m2!3d42.2350196!4d-82.9738464!16s%2Fg%2F1tdl6sy0?entry=ttu";
    string inputSubject { get; set; } = "";
    ValidationStatus isNameValid { get; set; } = ValidationStatus.Success;
    string inputName { get; set; } = "";
    string inputEmail { get; set; } = "";
    string inputMessage { get; set; } = "";

    Validations? validations;

    async Task OnClickedSubmit()
    {
        if (await validations!.ValidateAll())
        {
            bool status = Api.SendEmailService.Instance().Call(inputName, inputEmail, inputSubject, inputMessage);
            if (status)
            {
                EmailIsSent = true;
            }
            //navManager.NavigateTo("/", true);
        }
    }
}
